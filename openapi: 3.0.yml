openapi: 3.0.3
info:
  title: Category RESTful API
  description: API Spec for Category RESTful API
  version: 1.0.0
servers:
  - url: http://127.0.0.1:3000/api
paths:
  "/users/register":
    post:
      summary: register user
      tags: 
        - User API
      
      requestBody:
        required : true
        content: 
          multipart/form-data:
            schema: 
              allOf:
                - "$ref": "#/components/schemas/CreateUser" 
      responses:
        '200':
          description: Success Create User
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  status:
                    type: string
                  data:
                    "$ref": "#/components/schemas/User"
  "/users/login":
    post:
      summary: login user
      tags: 
        - User API
      requestBody:
        required : true
        content: 
          application/json:
            schema: 
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success Login User
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      token:
                        type: string
      
  "/user":
    get:
      summary: Authentication
      description: get detail info user
      tags:
        - User API
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Success Get info User
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  status:
                    type: string
                  data:
                    "$ref": "#/components/schemas/User"
  "/users":
    get:
      summary: Get list user
      description: get list user must admin
      tags:
        - User API
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Success get list user
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/User"
  "/user/{id}":
    get:
      summary: get user by id
      description: get detail user only for admin
      tags:
        - User API
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: user_id
          schema:
            type: number
      responses:
        '200':
          description: Success Get info User
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  status:
                    type: string
                  data:
                    "$ref": "#/components/schemas/User"
    put:
      summary: update user
      description: update user
      tags:
        - User API
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: user_id
          schema:
            type: number
      requestBody:
        required : true
        content: 
          multipart/form-data:
            schema: 
              allOf:
                - "$ref": "#/components/schemas/CreateUser" 
      responses:
        '200':
          description: Success update User
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  status:
                    type: string
                  data:
                    type: boolean

  "/book" :
    post: 
      summary: Create book
      tags:
        - Book API
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              allOf:
                - "$ref": "#/components/schemas/CreateBook"
      responses:
        '200':
          description: Success Create Book
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  status:
                    type: string
                  data:
                    "$ref": "#/components/schemas/User"
      
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    CreateUser:
      type: object
      properties:
        name :
          type: string
        email :
          type : string
        password: 
          type: string
        gender:
          type: string
        telp:
          type: string
        birthdate:
          type: string
        address:
          type: string
        foto:
          type: string
          format: binary
    User:
      type: object
      properties:
        user_id: 
          type: number
        name :
          type: string
        email :
          type : string
        password: 
          type: string
        gender:
          type: string
        telp:
          type: string
        birthdate:
          type: string
        address:
          type: string
        foto:
          type: string
        batas:
          type: number
        is_enabled:
          type: boolean
        level:
          type: string
    CreateBook:
      type: object
      properties:
        title:
          type: string
        category:
          type: string
        author:
          type: string
        publisher:
          type: string
        isbn:
          type: string
        page_count:
          type: string
        stock:
          type: string
        publication_year:
          type: string
        foto:
          type: string
          format: binary
        rak:
          type: string
        column:
          type: string
        rows:
          type: string
        price:
          type: string
    # Book:
    #   type: object
    #   properties:
        
        
    
        
        
        
        
        
        
        
        